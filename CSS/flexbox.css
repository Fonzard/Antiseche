/* Exercice 1 */
.container-1{
    width:50%;
    display:flex;
    flex-direction: row;
    flex-wrap: wrap;
    background-color: #ccc;
    margin-bottom: 50px;
    color:gray;
    margin-left: auto;
    margin-right: auto;
 
}
.container-1 > .box {
    height:50px;
    width:50px;    
    margin:5px;
    background-color:white;
    border:2px solid #000;    
}
.container-1 > .box-1 {
    background-color: white;
    order: 2; /* Augmenter de +1 suffit, il faut juste qu'il ait une valeur plus haute que les autres. La valeur de base est 1 */
    flex-shrink: 1;
}
.container-1 > .box-2 {
    background-color: white;
    flex-grow:1;
}
.container-1 > .box-3 {
    background-color: white;
    flex-shrink: 1;
}
.container-1 > .box-4 {
    background-color: white;
    flex-basis: 200px; /* j'ai établit une valeur de base au box, et après je fais evoluer leur taille en fonction des besoins, avec grow ou shrink */
}
/* Ex 2 */
.container-2 {
    height:175px;
    width:50%;
    margin-bottom: 50px;
    display:flex;
    flex-wrap: wrap;
    background-color: #ccc;
    align-items: center;
    justify-content: center;
    color:grey;
    margin-left: auto;
    margin-right: auto;
}
.container-2 > .box {
    height:50px;
    width:50px;
    justify-content:space-between;
    margin:5px;
    border:2px solid #000;
    background-color: white;
}
.bx-1 {
    order:4;
    flex-grow: 1;
}
.bx-2 {
    order:5;
    flex-grow: 1;
}
.bx-3 {
    order:3;
    align-self: flex-start;
    flex-grow: 1;
}
.bx-4 { 
    order:6;
    flex-grow: 1;
}
.bx-5 {
    align-self: flex-end;
    flex-grow: 1;
}
.bx-6 {
    order:7;
    flex-grow: 1;
}
.bx-7 {
    order:2;
    flex-grow: 1;
}
.bx-8 {
    order:8;
    align-self:flex-end;
    flex-grow: 1;
}
.bx-9 {
    order:11;
    flex-grow: 1;
}
.bx-10 {
    order:10;
    flex-grow: 1;
}
.bx-11 {
    order:9;
    align-self:flex-start;
    flex-grow: 1;
}
.bx-12 {
    order:12;
    flex-grow: 1;
}
/*Exercice 3.1 */
.container-3 {
    margin-bottom: 50px;
    height: 300px;
    width: 850px;
    display:flex;
    flex-direction:row;
    flex-wrap: wrap;
    background-color: black;
    align-items: stretch;
    justify-content: start;
    margin-left: auto;
    margin-right: auto;
}
.container-3 > .vertical {
    width:100px;
    
}

/* Technique pour pas déclarer toute les class et leur donner une couleur;  */
div:nth-of-type(5n+1) { background-color:#1abc9c}
div:nth-of-type(5n+2) { background-color:#3498db}
div:nth-of-type(5n+3) { background-color:#9b59b6}
div:nth-of-type(5n+4) { background-color:#e67e23}
div:nth-of-type(5n) { background-color:#e74b3c}
span { background-color: rgba(255, 255, 255, .5); 
        border-radius: 50%; 
        display: block; 
        font-size: 16px; 
        height: auto; 
        line-height: 3em; 
        text-align: center; 
        width: 3em;
 }
/*Exercice 3.2 */
.container-3 > .wrap {
    width:200px;       
}
/* Exercice 3.3 */
.container-4 {
    min-height: 60vh;
    display:flex; 
    flex-direction:row; /* Row : les items vont être sur une même ligne */
    flex-wrap:wrap; /* Wrap : les items ont la possibilitées de se placer sur de multiple lignes, de haut en bas.*/
    padding:1em;
    margin:auto;
    width:90%;
    justify-content: center;
    border: 4px solid rgb(152, 83, 10);
    gap:5px;
    margin-bottom: 50px;
}
    .container-4 > .box {
    width:24%;   /* Possibilité d'utiliser calc pour être plus précis */  
    height: 30vh;
    margin-top: 5px;
    margin-bottom: 5px;
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;
}
/*Exercice 4.1 */
.container-5 {
    min-height: 80vh;
    display:flex;
    flex-direction:row;
    flex-wrap:wrap; 
    margin-left: auto;
    margin-right: auto;
    width:90%;
    justify-content: center;
    border: 4px solid rgb(152, 83, 10);
    gap:5px;
    margin-bottom: 50px;
    padding:1em;
}
.container-5 > .box {
    width: 24%; 
    height: 26vh;
    margin-top: 5px;
    margin-bottom: 5px;
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;
}
.container-5 > .box:nth-child(5) {
    width: 98%;

}